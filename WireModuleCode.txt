char serialNumChars[34] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
String serialNum;
char wires[6];
int wireAmount;
int correctPosition; 

int wirePin[6] = {2, 4, 5, 18, 19, 21};
int greenLedPin = 14;
int redLedPin = 12;

void setup() {
  Serial.begin(9600);
  randomSeed(analogRead(0));
  for (int i = 0; i < 6; i++) {
    pinMode(wirePin[i], INPUT_PULLUP);
  }
  pinMode(greenLedPin, OUTPUT);
  pinMode(redLedPin, OUTPUT);
  digitalWrite(greenLedPin, LOW); 
  digitalWrite(redLedPin, LOW); 

  for (int i = 0; i < 5; i++) {
    serialNum += serialNumChars[random(0, 34)];
  }
  serialNum += serialNumChars[random(24, 34)];
  Serial.println("Serial: " + serialNum);

  wireAmount = random(3, 7); 
  for (int i = 0; i < wireAmount; i++) {
    int randWire;
    int randColor;
    do {
      randWire = random(0, 6);
    } while (wires[randWire]);
    randColor = random(0, 5);
    if (randColor == 0) wires[randWire] = 'R';
    else if (randColor == 1) wires[randWire] = 'Y';
    else if (randColor == 2) wires[randWire] = 'B';
    else if (randColor == 3) wires[randWire] = 'b';
    else if (randColor == 4) wires[randWire] = 'W';
  }
  Serial.print(" Wires: ");
  for (int i = 0; i < 6; i++) {
    if (!wires[i]) Serial.print("-");
    else Serial.print(wires[i]);
  }

  if (wireAmount == 3) {
    if (noWires('R')) wirePosition(2);  
    else if (lastWireIs('W')) lastWirePosition(0);
    else if (moreThanOne('b')) lastWirePosition('b');
    else lastWirePosition(0);
  } else if (wireAmount == 4) {
    if (moreThanOne('R') && isSerialOdd()) lastWirePosition('R');
    else if (lastWireIs('Y') && noWires('R')) wirePosition(1);
    else if (exactlyOne('b')) wirePosition(1);
    else if (moreThanOne('Y')) lastWirePosition(0);
    else wirePosition(2);
  } else if (wireAmount == 5) {
    if (lastWireIs('B') && isSerialOdd()) wirePosition(4);
    else if (exactlyOne('R') && moreThanOne('Y')) wirePosition(1);
    else if (noWires('B')) wirePosition(2);
    else wirePosition(1);
  } else if (wireAmount == 6) {
    if (noWires('Y') && isSerialOdd()) wirePosition(3);
    else if (exactlyOne('Y') && moreThanOne('W')) wirePosition(4);
    else if (noWires('R')) lastWirePosition(0);
    else wirePosition(4);
  }
  Serial.println();
  Serial.print("   Cut: ");
  for (int i = 0; i < 6; i++) {
    if (i == correctPosition) Serial.print("X");
    else Serial.print("-");
  }
}

void loop() {
  for (int i = 0; i < 6; i++) {
    if (wires[i] && !digitalRead(wirePin[i])) {
      if (i == correctPosition) digitalWrite(greenLedPin, HIGH);
      else {
        digitalWrite(redLedPin, HIGH);
        delay(500);
        digitalWrite(redLedPin, LOW);
      }
    }
  }
  delay(50);
}

void wirePosition(int x) {
  int u = 0;
  for (int i = 0; i < 6; i++) {
    if (wires[i]) u++; 
    if (u == x) {
      correctPosition = i;
      return;
    }
  }
}

bool noWires(char x) {
  for (int i = 0; i < 6; i++) {
    if (wires[i] == x) return false;
  }
  return true;
}

bool lastWireIs(char x) {
  for (int i = 5; i > -1; i--) {
    if (wires[i]) {
      if (wires[i] == x) return true; 
      return false;
    }
  }
  return false;
}

void lastWirePosition(char x) {
  for (int i = 5; i > -1; i--) {
    if (wires[i]) {
      if (wires[i] == x || !x) {
        correctPosition = i;
        return;
      }
    }
  }
}

bool moreThanOne(char x) {
  int u = 0;
  for (int i = 0; i < 6; i++) {
    if (wires[i] == x) u++;
    if (u > 1) return true; 
  }
  return false;
}

bool exactlyOne(char x) {
  int u = 0;
  for (int i = 0; i < 6; i++) {
    if (wires[i] == x) u++;
    if (u > 1) return false;
  }
  if (u == 0) return false;
  return true;
}

bool isSerialOdd() {
  int x = serialNum.charAt(serialNum.length()-1);
  if (x % 2) return true;
  return false;
}